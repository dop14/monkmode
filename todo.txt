Adatok amelyeket tarolni akarok:
- total focus time
- focus sessions completed
- longest focus session
- avarage focus time per session (lekérdezéskor AVG)

- daily goal achieved (lekérdezéskor COUNT)
- current streak (Pythonnal streak_logból)
- longest streak (Pythonnal streak_logból)
- karma (consistency) % -> Elmúlt 3 hónapban hány napon érte a daily goalt, hétvégék opcionálisak (Pythonnal streak_logból)
- karma level (0-15 % - Novice Monk, 16-31 % - Adept Monk, 32 - 47 % - Disciple Monk, 48 - 63% - Master Monk, 64 - 79 % - Enlightened Monk, 80 - 100% - Zen Grandmaster)


CREATE TABLE IF NOT EXISTS streak_log (
    date DATE PRIMARY KEY,

    goal_achieved BOOLEAN, 

    is_weekend BOOLEAN NOT NULL DEFAULT 0

)

 
+ 1 hours and 0 minutes (ha egesz szamra jon ki ne mutassuk hogy 0 perc a labeleknel)
+ mi van, ha a jelenlegi fokusz elerne a daily goalt, de mi X-el zarjuk be az appot fokusz kozben
IMPLEMENT check_daily_goal
3. Count longest_streak all time 
- store longest streak in user_stats OR count it via python


4. Everytime a focus session is finished properly, check if the daily goal has been achieved
if daily_goal_progression bar == 100:
    save_daily_goal() -> check if there's already a row for today or not 

5. Calculate karma
(teljesitett napok szama / osszes relevans nap) * 100
(COUNT daily_goal in the last 3 months / calculate relevant days) * 100

6. Load stats













Focus time:
- user can choose the timeframe: all history, this week, this month, this year, custom
- OSZLOP DIAGRAM: shows the time spent in focus with each period setting
- KÖR DIAGRAM: hogyan osztódnak el az egyes period settingek (pomodoro 60%, long-pomodoro 40%)

Subjects: (archived subjects are here too)
- user can choose timeframe: all history, this week, this month, this year, custom
- OSZLOP DIAGRAM: x axis (subjects), y axis (hours) -> oszlopdiagram
- KÖR DIAGRAM: hogyan osztódnak el az egyes subjectek (study 60%, maths 20%, work 20%)

Heatmap:
- user can scroll through a heatmap history (like on github)
- days where there was no focus will show with grey
- days where there was focus but the goal was not achieved will show with orange
- days where there was focus and goal was achieved will show with blue
- each day is clickable (pop-up window)
    - show the focus time that day
    - the most focused subject that day
    - the state of the daily goal that day
    - the most used period setting that day












ELSE TODO:
- Run db_manager.py automatically when the user enters the app
- db backup
- what if db changes (migration for users)
- Circular progress bar around the timer label
- save small focus window's last location?
- delete history
- monkmode logo (Logo created with Canva AI)
- help -> how to use (github), about (new page)
- karma
- .exe file



ABOUT:
 We require that you show attribution with a link back to https://zenquotes.io/ when using the free version of this API.
 App's goal
 my github profile
 technologies used
 ...
